from java.util import *
from java.lang import *
from atavism.msgsys import *
from atavism.agis.plugins import BonusClient
from atavism.agis.plugins import AgisInventoryClient
from atavism.agis.plugins import ArenaClient
from atavism.agis.plugins import AgisMobClient
from atavism.agis.plugins import FactionClient
from atavism.agis.plugins import AgisWorldManagerClient
from atavism.agis.plugins import VoxelClient
from atavism.agis.plugins import GuildClient
from atavism.agis.plugins import AuctionClient
from atavism.agis.plugins import WeatherClient
from atavism.agis.plugins import CraftingClient
from atavism.agis.plugins import SocialClient
#from atavism.agis.plugins import

#
# This python file creates a world-specific message catalog, and 
# contains definitions for world-specific message  types, if 
# your world makes use of them.  Not all worlds actually
# need to define their own message types, but if if your world does
# need world-specific message types, they must be added to your 
# world-specific message catalog by listing them in this file
#

#
# Create the world message catalog.  Atavism reserves message numbers
# from 1 through 500; the world-specific catalog defined below allocates
# message type numbers from the range 501-1000.
#
worldMessageCatalog = MessageCatalog.addMsgCatalog("worldMessageCatalog", 501, 500);

#
# Add your world-specific messages here.  Each call to addMsgTypeTranslation
# adds the message type which is the second argument to the world message
# catalog.  Each message type must be defined in YourWorldModule by a call
# to MessageType.intern(message_type_string);
# 

MessageCatalog.addMsgTypeTranslation(worldMessageCatalog, ProxyPlugin.MSG_TYPE_SERVER_RELOAD)
MessageCatalog.addMsgTypeTranslation(worldMessageCatalog, GroupClient.MSG_TYPE_GROUP_MEMBERS_UPDATE)

MessageCatalog.addMsgTypeTranslation(worldMessageCatalog, Behavior.MSG_TYPE_LINKED_AGGRO)

MessageCatalog.addMsgTypeTranslation(worldMessageCatalog, RankingClient.MSG_TYPE_GET_RANKING)
MessageCatalog.addMsgTypeTranslation(worldMessageCatalog, RankingClient.MSG_TYPE_GET_RANKING_LIST)

MessageCatalog.addMsgTypeTranslation(worldMessageCatalog, AchievementsClient.MSG_TYPE_GET_ACHIEVEMENTS)
MessageCatalog.addMsgTypeTranslation(worldMessageCatalog, AchievementsClient.MSG_TYPE_SET_ACHIEVEMENTS_TITLE)
MessageCatalog.addMsgTypeTranslation(worldMessageCatalog, AchievementsClient.MSG_TYPE_SET_ACHIEVEMENT)
MessageCatalog.addMsgTypeTranslation(worldMessageCatalog, AchievementsClient.MSG_TYPE_RANGING_DATA)

MessageCatalog.addMsgTypeTranslation(worldMessageCatalog, BonusClient.MSG_TYPE_GET_ALL_VIP)
MessageCatalog.addMsgTypeTranslation(worldMessageCatalog, BonusClient.MSG_TYPE_GET_VIP)
MessageCatalog.addMsgTypeTranslation(worldMessageCatalog, BonusClient.MSG_TYPE_EXTEND_VIP)
MessageCatalog.addMsgTypeTranslation(worldMessageCatalog, BonusClient.MSG_TYPE_BONUS_ADD)
MessageCatalog.addMsgTypeTranslation(worldMessageCatalog, BonusClient.MSG_TYPE_BONUS_REMOVE)
MessageCatalog.addMsgTypeTranslation(worldMessageCatalog, BonusClient.MSG_TYPE_BONUSES_UPDATE)
MessageCatalog.addMsgTypeTranslation(worldMessageCatalog, BonusClient.MSG_TYPE_GLOBAL_EVENT_UPDATE)

#MessageCatalog.addMsgTypeTranslation(worldMessageCatalog, AgisInventoryClient.MSG_TYPE_GET_CURR_ICON)
#MessageCatalog.addMsgTypeTranslation(worldMessageCatalog, AgisInventoryClient.MSG_TYPE_GET_SKILL_ICON)
#MessageCatalog.addMsgTypeTranslation(worldMessageCatalog, AgisInventoryClient.MSG_TYPE_GET_EFFECT_ICON)
#MessageCatalog.addMsgTypeTranslation(worldMessageCatalog, AgisInventoryClient.MSG_TYPE_GET_ABILITY_ICON)
#MessageCatalog.addMsgTypeTranslation(worldMessageCatalog, AgisInventoryClient.MSG_TYPE_GET_BUILD_OBJ_ICON)
#MessageCatalog.addMsgTypeTranslation(worldMessageCatalog, AgisInventoryClient.MSG_TYPE_GET_CRAFTING_RECIPE_ICON)
#MessageCatalog.addMsgTypeTranslation(worldMessageCatalog, YourWorldModule.MSG_TYPE_YOUR_MESSAGE_TYPE)MSG_TYPE_GET_ITEM MSG_TYPE_GET_ICON




MessageCatalog.addMsgTypeTranslation(worldMessageCatalog, AgisInventoryClient.MSG_TYPE_SEND_STORAGE_ITEMS_AS_MAIL)
MessageCatalog.addMsgTypeTranslation(worldMessageCatalog, AgisInventoryClient.MSG_TYPE_COUNT_GENERIC_ITEM)
MessageCatalog.addMsgTypeTranslation(worldMessageCatalog, AgisInventoryClient.MSG_TYPE_GET_ITEMS_WITH_PARAM)
MessageCatalog.addMsgTypeTranslation(worldMessageCatalog, AgisInventoryClient.MSG_TYPE_SET_ITEM_COUNT)
MessageCatalog.addMsgTypeTranslation(worldMessageCatalog, AgisInventoryClient.MSG_TYPE_SET_ITEM_PROPERTY)
MessageCatalog.addMsgTypeTranslation(worldMessageCatalog, AgisInventoryClient.MSG_TYPE_GENERATE_ITEM_AS)
MessageCatalog.addMsgTypeTranslation(worldMessageCatalog, AgisInventoryClient.MSG_TYPE_GET_ITEM)
MessageCatalog.addMsgTypeTranslation(worldMessageCatalog, AgisInventoryClient.MSG_TYPE_ENCHANTING_DETAIL)
MessageCatalog.addMsgTypeTranslation(worldMessageCatalog, AgisInventoryClient.MSG_TYPE_ENCHANT)
MessageCatalog.addMsgTypeTranslation(worldMessageCatalog, AgisInventoryClient.MSG_TYPE_SOCKETING_RESET)
MessageCatalog.addMsgTypeTranslation(worldMessageCatalog, AgisInventoryClient.MSG_TYPE_SOCKETING_RESET_DETAIL)
MessageCatalog.addMsgTypeTranslation(worldMessageCatalog, AgisInventoryClient.MSG_TYPE_GENERATE_ITEM_RESPONSE_OID)
MessageCatalog.addMsgTypeTranslation(worldMessageCatalog, AgisInventoryClient.MSG_TYPE_GET_ITEM_PROPERTY)
MessageCatalog.addMsgTypeTranslation(worldMessageCatalog, AgisInventoryClient.MSG_TYPE_SOCKETING_DETAIL)
MessageCatalog.addMsgTypeTranslation(worldMessageCatalog, AgisInventoryClient.MSG_TYPE_INSERT_TO_SOCKET)
MessageCatalog.addMsgTypeTranslation(worldMessageCatalog, AgisInventoryClient.MSG_TYPE_ITEM_ACQUIRE_STATUS_CHANGE)
MessageCatalog.addMsgTypeTranslation(worldMessageCatalog, AgisInventoryClient.MSG_TYPE_ITEM_EQUIP_STATUS_CHANGE)
MessageCatalog.addMsgTypeTranslation(worldMessageCatalog, AgisInventoryClient.MSG_TYPE_REQ_OPEN_MOB)
MessageCatalog.addMsgTypeTranslation(worldMessageCatalog, AgisInventoryClient.MSG_TYPE_REMOVE_SPECIFIC_ITEM)
MessageCatalog.addMsgTypeTranslation(worldMessageCatalog, AgisInventoryClient.MSG_TYPE_REMOVE_GENERIC_ITEM)
MessageCatalog.addMsgTypeTranslation(worldMessageCatalog, AgisInventoryClient.MSG_TYPE_GET_SPECIFIC_ITEM_DATA)
MessageCatalog.addMsgTypeTranslation(worldMessageCatalog, AgisInventoryClient.MSG_TYPE_GET_GENERIC_ITEM_DATA)
MessageCatalog.addMsgTypeTranslation(worldMessageCatalog, AgisInventoryClient.MSG_TYPE_GENERATE_ITEM)
MessageCatalog.addMsgTypeTranslation(worldMessageCatalog, AgisInventoryClient.MSG_TYPE_GENERATE_ITEM_NEEDS_RESPONSE)
MessageCatalog.addMsgTypeTranslation(worldMessageCatalog, AgisInventoryClient.MSG_TYPE_PLACE_BAG)
MessageCatalog.addMsgTypeTranslation(worldMessageCatalog, AgisInventoryClient.MSG_TYPE_MOVE_BAG)
MessageCatalog.addMsgTypeTranslation(worldMessageCatalog, AgisInventoryClient.MSG_TYPE_REMOVE_BAG)
MessageCatalog.addMsgTypeTranslation(worldMessageCatalog, AgisInventoryClient.MSG_TYPE_MOVE_ITEM)
MessageCatalog.addMsgTypeTranslation(worldMessageCatalog, AgisInventoryClient.MSG_TYPE_LOOT_ITEM)
MessageCatalog.addMsgTypeTranslation(worldMessageCatalog, AgisInventoryClient.MSG_TYPE_LOOT_ALL)
MessageCatalog.addMsgTypeTranslation(worldMessageCatalog, AgisInventoryClient.MSG_TYPE_LOOT_ROLL)
MessageCatalog.addMsgTypeTranslation(worldMessageCatalog, AgisInventoryClient.MSG_TYPE_LOOT_GROUND_ITEM)
MessageCatalog.addMsgTypeTranslation(worldMessageCatalog, AgisInventoryClient.MSG_TYPE_DROP_GROUND_ITEM)
MessageCatalog.addMsgTypeTranslation(worldMessageCatalog, AgisInventoryClient.MSG_TYPE_INVENTORY_GENERATE_GROUND_LOOT)
MessageCatalog.addMsgTypeTranslation(worldMessageCatalog, AgisInventoryClient.MSG_TYPE_GENERATE_LOOT)
MessageCatalog.addMsgTypeTranslation(worldMessageCatalog, AgisInventoryClient.MSG_TYPE_GENERATE_LOOT_EFFECT)
MessageCatalog.addMsgTypeTranslation(worldMessageCatalog, AgisInventoryClient.MSG_TYPE_GET_LOOT_LIST)
MessageCatalog.addMsgTypeTranslation(worldMessageCatalog, AgisInventoryClient.MSG_TYPE_GET_MERCHANT_LIST)
MessageCatalog.addMsgTypeTranslation(worldMessageCatalog, AgisInventoryClient.MSG_TYPE_PURCHASE_ITEM_FROM_MERCHANT)
MessageCatalog.addMsgTypeTranslation(worldMessageCatalog, AgisInventoryClient.MSG_TYPE_PURCHASE_ITEM)
MessageCatalog.addMsgTypeTranslation(worldMessageCatalog, AgisInventoryClient.MSG_TYPE_SELL_ITEM)
MessageCatalog.addMsgTypeTranslation(worldMessageCatalog, AgisInventoryClient.MSG_TYPE_PICKUP_ITEM)
MessageCatalog.addMsgTypeTranslation(worldMessageCatalog, AgisInventoryClient.MSG_TYPE_QUEST_ITEMS_LIST)
MessageCatalog.addMsgTypeTranslation(worldMessageCatalog, AgisInventoryClient.MSG_TYPE_SEND_INV_UPDATE)
MessageCatalog.addMsgTypeTranslation(worldMessageCatalog, AgisInventoryClient.MSG_TYPE_GET_MAIL)
MessageCatalog.addMsgTypeTranslation(worldMessageCatalog, AgisInventoryClient.MSG_TYPE_MAIL_READ)
MessageCatalog.addMsgTypeTranslation(worldMessageCatalog, AgisInventoryClient.MSG_TYPE_MAIL_TAKE_ITEM)
MessageCatalog.addMsgTypeTranslation(worldMessageCatalog, AgisInventoryClient.MSG_TYPE_RETURN_MAIL)
MessageCatalog.addMsgTypeTranslation(worldMessageCatalog, AgisInventoryClient.MSG_TYPE_DELETE_MAIL)
MessageCatalog.addMsgTypeTranslation(worldMessageCatalog, AgisInventoryClient.MSG_TYPE_SEND_MAIL)
MessageCatalog.addMsgTypeTranslation(worldMessageCatalog, AgisInventoryClient.MSG_TYPE_SEND_PURCHASE_MAIL)
MessageCatalog.addMsgTypeTranslation(worldMessageCatalog, AgisInventoryClient.MSG_TYPE_CHECK_CURRENCY)
MessageCatalog.addMsgTypeTranslation(worldMessageCatalog, AgisInventoryClient.MSG_TYPE_ALTER_CURRENCY)
MessageCatalog.addMsgTypeTranslation(worldMessageCatalog, AgisInventoryClient.MSG_TYPE_GET_SKINS)
MessageCatalog.addMsgTypeTranslation(worldMessageCatalog, AgisInventoryClient.MSG_TYPE_RELOAD_ITEMS)
MessageCatalog.addMsgTypeTranslation(worldMessageCatalog, AgisInventoryClient.MSG_TYPE_SET_WEAPON)
MessageCatalog.addMsgTypeTranslation(worldMessageCatalog, AgisInventoryClient.MSG_TYPE_PURCHASE_SKIN)
MessageCatalog.addMsgTypeTranslation(worldMessageCatalog, AgisInventoryClient.MSG_TYPE_SET_SKIN_COLOUR)
MessageCatalog.addMsgTypeTranslation(worldMessageCatalog, AgisInventoryClient.MSG_TYPE_GET_ACCOUNT_ITEM_COUNT)
MessageCatalog.addMsgTypeTranslation(worldMessageCatalog, AgisInventoryClient.MSG_TYPE_ALTER_ITEM_COUNT)
MessageCatalog.addMsgTypeTranslation(worldMessageCatalog, AgisInventoryClient.MSG_TYPE_USE_ACCOUNT_ITEM)
MessageCatalog.addMsgTypeTranslation(worldMessageCatalog, AgisInventoryClient.MSG_TYPE_ITEM_ACTIVATED)
MessageCatalog.addMsgTypeTranslation(worldMessageCatalog, AgisInventoryClient.MSG_TYPE_RETURNBOOLEAN_CHECK_COMPONENTS)
MessageCatalog.addMsgTypeTranslation(worldMessageCatalog, AgisInventoryClient.MSG_TYPE_EQUIPPED_ITEM_USED)
MessageCatalog.addMsgTypeTranslation(worldMessageCatalog, AgisInventoryClient.MSG_TYPE_REPAIR_ITEMS)
MessageCatalog.addMsgTypeTranslation(worldMessageCatalog, AgisInventoryClient.MSG_TYPE_CREATE_STORAGE)
MessageCatalog.addMsgTypeTranslation(worldMessageCatalog, AgisInventoryClient.MSG_TYPE_GET_BANK_ITEMS)
MessageCatalog.addMsgTypeTranslation(worldMessageCatalog, AgisInventoryClient.MSG_TYPE_STORE_ITEM_IN_BANK)
MessageCatalog.addMsgTypeTranslation(worldMessageCatalog, AgisInventoryClient.MSG_TYPE_RETRIEVE_ITEM_FROM_BANK)
MessageCatalog.addMsgTypeTranslation(worldMessageCatalog, AgisInventoryClient.MSG_TYPE_OPEN_STORAGE)
MessageCatalog.addMsgTypeTranslation(worldMessageCatalog, AgisInventoryClient.MSG_TYPE_GET_STORAGE_CONTENTS)
MessageCatalog.addMsgTypeTranslation(worldMessageCatalog, AgisInventoryClient.MSG_TYPE_GET_ITEM_STORE)
MessageCatalog.addMsgTypeTranslation(worldMessageCatalog, AgisInventoryClient.MSG_TYPE_PURCHASE_STORE_ITEM)
MessageCatalog.addMsgTypeTranslation(worldMessageCatalog, AgisInventoryClient.MSG_TYPE_EQUIP_ITEM_IN_SLOT)
MessageCatalog.addMsgTypeTranslation(worldMessageCatalog, AgisInventoryClient.MSG_TYPE_DOES_INVENTORY_HAS_SUFFICIENT_SPACE)
MessageCatalog.addMsgTypeTranslation(worldMessageCatalog, AgisInventoryClient.MSG_TYPE_TRADE_START_REQ_RESPONSE)
MessageCatalog.addMsgTypeTranslation(worldMessageCatalog, AgisInventoryClient.MSG_TYPE_UPDATE_STORAGE)
MessageCatalog.addMsgTypeTranslation(worldMessageCatalog, AgisInventoryClient.MSG_TYPE_START_PLAYER_SHOP)
MessageCatalog.addMsgTypeTranslation(worldMessageCatalog, AgisInventoryClient.MSG_TYPE_START_SHOP)
MessageCatalog.addMsgTypeTranslation(worldMessageCatalog, AgisInventoryClient.MSG_TYPE_STOP_SHOP)
MessageCatalog.addMsgTypeTranslation(worldMessageCatalog, AgisInventoryClient.MSG_TYPE_OPEN_PLAYER_SHOP)
MessageCatalog.addMsgTypeTranslation(worldMessageCatalog, AgisInventoryClient.MSG_TYPE_CANCEL_SHOP)
MessageCatalog.addMsgTypeTranslation(worldMessageCatalog, AgisInventoryClient.MSG_TYPE_PLAYER_SHOP_BUY)
MessageCatalog.addMsgTypeTranslation(worldMessageCatalog, AgisInventoryClient.MSG_TYPE_DELETE_PLAYER_SHOP)
MessageCatalog.addMsgTypeTranslation(worldMessageCatalog, AgisInventoryClient.MSG_TYPE_GENERATE_LOOT_FROM_LOOT_TABLE)
MessageCatalog.addMsgTypeTranslation(worldMessageCatalog, AgisInventoryClient.MSG_TYPE_GET_EQUIP_ITEMS)
MessageCatalog.addMsgTypeTranslation(worldMessageCatalog, AgisInventoryClient.MSG_TYPE_EQUIP_ITEM)
MessageCatalog.addMsgTypeTranslation(worldMessageCatalog, AgisInventoryClient.MSG_TYPE_UNEQUIP_ITEM)
MessageCatalog.addMsgTypeTranslation(worldMessageCatalog, AgisInventoryClient.MSG_TYPE_LOOT_ALL_F)
MessageCatalog.addMsgTypeTranslation(worldMessageCatalog, AgisInventoryClient.MSG_TYPE_SWITCH_WEAPON)
MessageCatalog.addMsgTypeTranslation(worldMessageCatalog, AgisInventoryClient.MSG_TYPE_DRAW_WEAPON)
MessageCatalog.addMsgTypeTranslation(worldMessageCatalog, AgisInventoryClient.MSG_TYPE_DRAW_WEAPON_CLIENT)


# Class Ability Client
MessageCatalog.addMsgTypeTranslation(worldMessageCatalog, ClassAbilityClient.MSG_TYPE_LEVEL_CHANGE)
MessageCatalog.addMsgTypeTranslation(worldMessageCatalog, ClassAbilityClient.MSG_TYPE_COMBAT_SKILL_INCREASE)
MessageCatalog.addMsgTypeTranslation(worldMessageCatalog, ClassAbilityClient.MSG_TYPE_COMBAT_SKILL_DECREASE)
MessageCatalog.addMsgTypeTranslation(worldMessageCatalog, ClassAbilityClient.MSG_TYPE_COMBAT_SKILL_RESET)
MessageCatalog.addMsgTypeTranslation(worldMessageCatalog, ClassAbilityClient.MSG_TYPE_COMBAT_SKILL_ALTER_CURRENT)
MessageCatalog.addMsgTypeTranslation(worldMessageCatalog, ClassAbilityClient.MSG_TYPE_COMBAT_GET_SKILL)
MessageCatalog.addMsgTypeTranslation(worldMessageCatalog, ClassAbilityClient.MSG_TYPE_COMBAT_GET_PLAYER_SKILL_LEVEL)
MessageCatalog.addMsgTypeTranslation(worldMessageCatalog, ClassAbilityClient.MSG_TYPE_LEARN_ABILITY)
MessageCatalog.addMsgTypeTranslation(worldMessageCatalog, ClassAbilityClient.MSG_TYPE_SET_SKILL_STATE)
MessageCatalog.addMsgTypeTranslation(worldMessageCatalog, ClassAbilityClient.MSG_TYPE_SKILL_LEVEL_CHANGE)
MessageCatalog.addMsgTypeTranslation(worldMessageCatalog, ClassAbilityClient.MSG_TYPE_ADD_SKILL_POINT)
MessageCatalog.addMsgTypeTranslation(worldMessageCatalog, ClassAbilityClient.MSG_TYPE_UNLEARN_ABILITY)
# Quest Client
MessageCatalog.addMsgTypeTranslation(worldMessageCatalog, QuestClient.MSG_TYPE_OFFER_QUEST)
MessageCatalog.addMsgTypeTranslation(worldMessageCatalog, QuestClient.MSG_TYPE_START_QUEST)
MessageCatalog.addMsgTypeTranslation(worldMessageCatalog, QuestClient.MSG_TYPE_CAN_PLAYER_START_QUEST)
MessageCatalog.addMsgTypeTranslation(worldMessageCatalog, QuestClient.MSG_TYPE_QUEST_ITEM_REQS)
MessageCatalog.addMsgTypeTranslation(worldMessageCatalog, QuestClient.MSG_TYPE_QUEST_ITEM_UPDATE)
MessageCatalog.addMsgTypeTranslation(worldMessageCatalog, QuestClient.MSG_TYPE_QUEST_TASK_UPDATE)
MessageCatalog.addMsgTypeTranslation(worldMessageCatalog, QuestClient.MSG_TYPE_REQ_QUEST_PROGRESS)
MessageCatalog.addMsgTypeTranslation(worldMessageCatalog, QuestClient.MSG_TYPE_COMPLETE_QUEST)
MessageCatalog.addMsgTypeTranslation(worldMessageCatalog, QuestClient.MSG_TYPE_QUEST_CONCLUDE_UPDATE)
MessageCatalog.addMsgTypeTranslation(worldMessageCatalog, QuestClient.MSG_TYPE_ABANDON_QUEST)
# Combat Client
MessageCatalog.addMsgTypeTranslation(worldMessageCatalog, CombatClient.MSG_TYPE_SET_COMBAT_INFO_STATE)
MessageCatalog.addMsgTypeTranslation(worldMessageCatalog, CombatClient.MSG_TYPE_COMBAT_MOB_DEATH)
MessageCatalog.addMsgTypeTranslation(worldMessageCatalog, CombatClient.MSG_TYPE_COMBAT_ABILITY_USED)
MessageCatalog.addMsgTypeTranslation(worldMessageCatalog, CombatClient.MSG_TYPE_COMBAT_STOP_AUTO_ATTACK)
MessageCatalog.addMsgTypeTranslation(worldMessageCatalog, CombatClient.MSG_TYPE_TARGET_TYPE)
MessageCatalog.addMsgTypeTranslation(worldMessageCatalog, CombatClient.MSG_TYPE_INTERRUPT_ABILITY)
MessageCatalog.addMsgTypeTranslation(worldMessageCatalog, CombatClient.MSG_TYPE_COMBAT_LOGOUT)
MessageCatalog.addMsgTypeTranslation(worldMessageCatalog, CombatClient.MSG_TYPE_FACTION_UPDATE)
MessageCatalog.addMsgTypeTranslation(worldMessageCatalog, CombatClient.MSG_TYPE_GET_AOE_TARGETS)
MessageCatalog.addMsgTypeTranslation(worldMessageCatalog, CombatClient.MSG_TYPE_UPDATE_ACTIONBAR)
MessageCatalog.addMsgTypeTranslation(worldMessageCatalog, CombatClient.MSG_TYPE_APPLY_EFFECT)
MessageCatalog.addMsgTypeTranslation(worldMessageCatalog, CombatClient.MSG_TYPE_REMOVE_EFFECT)
MessageCatalog.addMsgTypeTranslation(worldMessageCatalog, CombatClient.MSG_TYPE_ALTER_EXP)
MessageCatalog.addMsgTypeTranslation(worldMessageCatalog, CombatClient.MSG_TYPE_UPDATE_BREATH)
MessageCatalog.addMsgTypeTranslation(worldMessageCatalog, CombatClient.MSG_TYPE_UPDATE_FATIGUE)
MessageCatalog.addMsgTypeTranslation(worldMessageCatalog, CombatClient.MSG_TYPE_ALTER_HEARTS)
MessageCatalog.addMsgTypeTranslation(worldMessageCatalog, CombatClient.MSG_TYPE_KNOCKED_OUT)
MessageCatalog.addMsgTypeTranslation(worldMessageCatalog, CombatClient.MSG_TYPE_UPDATE_HEALTH_PROPS)
MessageCatalog.addMsgTypeTranslation(worldMessageCatalog, CombatClient.MSG_TYPE_REGEN_HEALTH_MANA)
MessageCatalog.addMsgTypeTranslation(worldMessageCatalog, CombatClient.MSG_TYPE_DECREMENT_WEAPON_USES)
MessageCatalog.addMsgTypeTranslation(worldMessageCatalog, CombatClient.MSG_TYPE_DISMOUNT)
MessageCatalog.addMsgTypeTranslation(worldMessageCatalog, CombatClient.MSG_TYPE_GET_PLAYER_STAT_VALUE)
MessageCatalog.addMsgTypeTranslation(worldMessageCatalog, CombatClient.MSG_TYPE_REMOVE_BUFF)
MessageCatalog.addMsgTypeTranslation(worldMessageCatalog, CombatClient.MSG_TYPE_AUTO_ATTACK_COMPLETED)
MessageCatalog.addMsgTypeTranslation(worldMessageCatalog, CombatClient.MSG_TYPE_ALTER_THREAT)
MessageCatalog.addMsgTypeTranslation(worldMessageCatalog, CombatClient.MSG_TYPE_ARENA_RELEASE)
MessageCatalog.addMsgTypeTranslation(worldMessageCatalog, CombatClient.MSG_TYPE_FALLING_EVENT)
MessageCatalog.addMsgTypeTranslation(worldMessageCatalog, CombatClient.MSG_CLIENT_LEVEL_LOADED)
MessageCatalog.addMsgTypeTranslation(worldMessageCatalog, CombatClient.MSG_TYPE_COMBAT_SKILL_DIFF)
MessageCatalog.addMsgTypeTranslation(worldMessageCatalog, CombatClient.MSG_TYPE_GET_COMBAT_OBJECT_PARAMS)
MessageCatalog.addMsgTypeTranslation(worldMessageCatalog, CombatClient.MSG_TYPE_SET_COMBAT_OBJECT_PARAMS)
MessageCatalog.addMsgTypeTranslation(worldMessageCatalog, CombatClient.MSG_TYPE_SET_COMBAT_OBJECT_PARAMS_NONBLOCK)
MessageCatalog.addMsgTypeTranslation(worldMessageCatalog, CombatClient.MSG_TYPE_COMBAT_STATS_MODIFY)
MessageCatalog.addMsgTypeTranslation(worldMessageCatalog, CombatClient.MSG_TYPE_COMBAT_DEL_STATS_MODIFY)
MessageCatalog.addMsgTypeTranslation(worldMessageCatalog, CombatClient.MSG_TYPE_SET_WMGR_STATS)
MessageCatalog.addMsgTypeTranslation(worldMessageCatalog, CombatClient.MSG_TYPE_SPRINT)
MessageCatalog.addMsgTypeTranslation(worldMessageCatalog, CombatClient.MSG_TYPE_COMBAT_RESET_ATTACKER)
MessageCatalog.addMsgTypeTranslation(worldMessageCatalog, CombatClient.MSG_TYPE_COMBAT_STATE)
MessageCatalog.addMsgTypeTranslation(worldMessageCatalog, CombatClient.MSG_TYPE_COMBAT_EVENT)
MessageCatalog.addMsgTypeTranslation(worldMessageCatalog, CombatClient.MSG_TYPE_GET_PLAYER_COOLDOWNS)
MessageCatalog.addMsgTypeTranslation(worldMessageCatalog, CombatClient.MSG_TYPE_DODGE)
MessageCatalog.addMsgTypeTranslation(worldMessageCatalog, CombatClient.MSG_TYPE_ABILITY_VECTOR)
MessageCatalog.addMsgTypeTranslation(worldMessageCatalog, CombatClient.MSG_TYPE_DEBUG_ABILITY)

# Arena Client
MessageCatalog.addMsgTypeTranslation(worldMessageCatalog, ArenaClient.MSG_TYPE_LEAVE_ARENA)
MessageCatalog.addMsgTypeTranslation(worldMessageCatalog, ArenaClient.MSG_TYPE_GET_ARENA_LIST)
MessageCatalog.addMsgTypeTranslation(worldMessageCatalog, ArenaClient.MSG_TYPE_GET_ARENA_STATS)
MessageCatalog.addMsgTypeTranslation(worldMessageCatalog, ArenaClient.MSG_TYPE_GET_ARENA_TYPES)
MessageCatalog.addMsgTypeTranslation(worldMessageCatalog, ArenaClient.MSG_TYPE_JOIN_QUEUE)
MessageCatalog.addMsgTypeTranslation(worldMessageCatalog, ArenaClient.MSG_TYPE_GROUP_JOIN_QUEUE)
MessageCatalog.addMsgTypeTranslation(worldMessageCatalog, ArenaClient.MSG_TYPE_LEAVE_QUEUE)
MessageCatalog.addMsgTypeTranslation(worldMessageCatalog, ArenaClient.MSG_TYPE_GROUP_LEAVE_QUEUE)
MessageCatalog.addMsgTypeTranslation(worldMessageCatalog, ArenaClient.MSG_TYPE_REMOVE_PLAYER)
MessageCatalog.addMsgTypeTranslation(worldMessageCatalog, ArenaClient.MSG_TYPE_ARENA_KILL)
MessageCatalog.addMsgTypeTranslation(worldMessageCatalog, ArenaClient.MSG_TYPE_PICKUP_FLAG)
MessageCatalog.addMsgTypeTranslation(worldMessageCatalog, ArenaClient.MSG_TYPE_DROP_FLAG)
MessageCatalog.addMsgTypeTranslation(worldMessageCatalog, ArenaClient.MSG_TYPE_ACTIVATE_MACHINE)
MessageCatalog.addMsgTypeTranslation(worldMessageCatalog, ArenaClient.MSG_TYPE_DOT_SCORE)
MessageCatalog.addMsgTypeTranslation(worldMessageCatalog, ArenaClient.MSG_TYPE_START_ARENA_CHECK)
MessageCatalog.addMsgTypeTranslation(worldMessageCatalog, ArenaClient.MSG_TYPE_ADD_CREATURE)
MessageCatalog.addMsgTypeTranslation(worldMessageCatalog, ArenaClient.MSG_TYPE_DESPAWN_GATES)
MessageCatalog.addMsgTypeTranslation(worldMessageCatalog, ArenaClient.MSG_TYPE_END_ARENA)
MessageCatalog.addMsgTypeTranslation(worldMessageCatalog, ArenaClient.MSG_TYPE_DUEL_CHALLENGE)
MessageCatalog.addMsgTypeTranslation(worldMessageCatalog, ArenaClient.MSG_TYPE_DUEL_ACCEPT_CHALLENGE)
MessageCatalog.addMsgTypeTranslation(worldMessageCatalog, ArenaClient.MSG_TYPE_DUEL_DECLINE_CHALLENGE)
MessageCatalog.addMsgTypeTranslation(worldMessageCatalog, ArenaClient.MSG_TYPE_DUEL_CHALLENGE_DISCONNECT)
MessageCatalog.addMsgTypeTranslation(worldMessageCatalog, ArenaClient.MSG_TYPE_DUEL_CHALLENGE_REMOVE)
MessageCatalog.addMsgTypeTranslation(worldMessageCatalog, ArenaClient.MSG_TYPE_DUEL_START)
MessageCatalog.addMsgTypeTranslation(worldMessageCatalog, ArenaClient.MSG_TYPE_DUEL_DEFEAT)
MessageCatalog.addMsgTypeTranslation(worldMessageCatalog, ArenaClient.MSG_TYPE_DUEL_DISCONNECT)
MessageCatalog.addMsgTypeTranslation(worldMessageCatalog, ArenaClient.MSG_TYPE_DUEL_REMOVE)
MessageCatalog.addMsgTypeTranslation(worldMessageCatalog, ArenaClient.MSG_TYPE_REMOVE_EFFECTS)
MessageCatalog.addMsgTypeTranslation(worldMessageCatalog, ArenaClient.MSG_TYPE_ACTIVATE_ARENA_ABILITY)
MessageCatalog.addMsgTypeTranslation(worldMessageCatalog, ArenaClient.MSG_TYPE_COMPLETE_TUTORIAL)
MessageCatalog.addMsgTypeTranslation(worldMessageCatalog, ArenaClient.MSG_TYPE_CHANGE_RACE)
MessageCatalog.addMsgTypeTranslation(worldMessageCatalog, ArenaClient.MSG_TYPE_SELECT_RACE)
MessageCatalog.addMsgTypeTranslation(worldMessageCatalog, ArenaClient.MSG_TYPE_ALTER_EXP)
MessageCatalog.addMsgTypeTranslation(worldMessageCatalog, ArenaClient.MSG_TYPE_RELEASE_REQUEST)
# Group Client
MessageCatalog.addMsgTypeTranslation(worldMessageCatalog, GroupClient.MSG_TYPE_GROUP_LEAVE)
MessageCatalog.addMsgTypeTranslation(worldMessageCatalog, GroupClient.MSG_TYPE_GROUP_INVITE_BY_NAME)
MessageCatalog.addMsgTypeTranslation(worldMessageCatalog, GroupClient.MSG_TYPE_GET_PLAYER_BY_NAME)
MessageCatalog.addMsgTypeTranslation(worldMessageCatalog, GroupClient.MSG_TYPE_CREATE_GROUP)
#MessageCatalog.addMsgTypeTranslation(worldMessageCatalog, GroupClient.MSG_TYPE_GET_FRIENDS)
#MessageCatalog.addMsgTypeTranslation(worldMessageCatalog, GroupClient.MSG_TYPE_ADD_FRIEND)
MessageCatalog.addMsgTypeTranslation(worldMessageCatalog, GroupClient.MSG_TYPE_GROUP_PROMOTE_LEADER)
MessageCatalog.addMsgTypeTranslation(worldMessageCatalog, GroupClient.MSG_TYPE_GET_GROUP_MEMBERS)
MessageCatalog.addMsgTypeTranslation(worldMessageCatalog, GroupClient.MSG_TYPE_GROUP_SETTINGS)

# Agis Mob Client
MessageCatalog.addMsgTypeTranslation(worldMessageCatalog, AgisMobClient.MSG_TYPE_DIALOG_CHECK)
MessageCatalog.addMsgTypeTranslation(worldMessageCatalog, AgisMobClient.MSG_TYPE_GET_PLAYERS_ONLINE)
MessageCatalog.addMsgTypeTranslation(worldMessageCatalog, AgisMobClient.MSG_TYPE_GET_INSTANCE_TEMPLATE)
MessageCatalog.addMsgTypeTranslation(worldMessageCatalog, AgisMobClient.MSG_TYPE_SPAWN_INSTANCE_MOBS)
MessageCatalog.addMsgTypeTranslation(worldMessageCatalog, AgisMobClient.MSG_TYPE_SPAWN_MOB)
MessageCatalog.addMsgTypeTranslation(worldMessageCatalog, AgisMobClient.MSG_TYPE_SPAWN_ARENA_CREATURE)
MessageCatalog.addMsgTypeTranslation(worldMessageCatalog, AgisMobClient.MSG_TYPE_SPAWN_PET)
MessageCatalog.addMsgTypeTranslation(worldMessageCatalog, AgisMobClient.MSG_TYPE_TAME_BEAST)
MessageCatalog.addMsgTypeTranslation(worldMessageCatalog, AgisMobClient.MSG_TYPE_PET_COMMAND_UPDATE)
MessageCatalog.addMsgTypeTranslation(worldMessageCatalog, AgisMobClient.MSG_TYPE_SEND_PET_COMMAND)
MessageCatalog.addMsgTypeTranslation(worldMessageCatalog, AgisMobClient.MSG_TYPE_UPDATE_PET_STATS)
MessageCatalog.addMsgTypeTranslation(worldMessageCatalog, AgisMobClient.MSG_TYPE_PET_TARGET_LOST)
MessageCatalog.addMsgTypeTranslation(worldMessageCatalog, AgisMobClient.MSG_TYPE_TARGET_IN_REACTION_RANGE)
MessageCatalog.addMsgTypeTranslation(worldMessageCatalog, AgisMobClient.MSG_TYPE_ADD_TARGET_TO_CHECK)
MessageCatalog.addMsgTypeTranslation(worldMessageCatalog, AgisMobClient.MSG_TYPE_REMOVE_TARGET_TO_CHECK)
MessageCatalog.addMsgTypeTranslation(worldMessageCatalog, AgisMobClient.MSG_TYPE_INTERACT_WITH_OBJECT)
MessageCatalog.addMsgTypeTranslation(worldMessageCatalog, AgisMobClient.MSG_TYPE_ADD_NM_OBJECT)
MessageCatalog.addMsgTypeTranslation(worldMessageCatalog, AgisMobClient.MSG_TYPE_DEBUG_NM)
MessageCatalog.addMsgTypeTranslation(worldMessageCatalog, AgisMobClient.MSG_TYPE_GET_TEMPLATES)
MessageCatalog.addMsgTypeTranslation(worldMessageCatalog, AgisMobClient.MSG_TYPE_CREATE_MOB_SPAWN)
MessageCatalog.addMsgTypeTranslation(worldMessageCatalog, AgisMobClient.MSG_TYPE_CREATE_QUEST)
MessageCatalog.addMsgTypeTranslation(worldMessageCatalog, AgisMobClient.MSG_TYPE_CREATE_LOOT_TABLE)
MessageCatalog.addMsgTypeTranslation(worldMessageCatalog, AgisMobClient.MSG_TYPE_EDIT_QUEST)
MessageCatalog.addMsgTypeTranslation(worldMessageCatalog, AgisMobClient.MSG_TYPE_GET_ISLANDS_DATA)
MessageCatalog.addMsgTypeTranslation(worldMessageCatalog, AgisMobClient.MSG_TYPE_VERIFY_ISLAND_ACCESS)
MessageCatalog.addMsgTypeTranslation(worldMessageCatalog, AgisMobClient.MSG_TYPE_ENTER_WORLD)
MessageCatalog.addMsgTypeTranslation(worldMessageCatalog, AgisMobClient.MSG_TYPE_REQUEST_DEVELOPER_ACCESS)
MessageCatalog.addMsgTypeTranslation(worldMessageCatalog, AgisMobClient.MSG_TYPE_CREATE_ISLAND)
MessageCatalog.addMsgTypeTranslation(worldMessageCatalog, AgisMobClient.MSG_TYPE_VIEW_MARKERS)
MessageCatalog.addMsgTypeTranslation(worldMessageCatalog, AgisMobClient.MSG_TYPE_REQUEST_SPAWN_DATA)
MessageCatalog.addMsgTypeTranslation(worldMessageCatalog, AgisMobClient.MSG_TYPE_EDIT_SPAWN_MARKER)
MessageCatalog.addMsgTypeTranslation(worldMessageCatalog, AgisMobClient.MSG_TYPE_DELETE_SPAWN_MARKER)
MessageCatalog.addMsgTypeTranslation(worldMessageCatalog, AgisMobClient.MSG_TYPE_CREATE_MOB)
MessageCatalog.addMsgTypeTranslation(worldMessageCatalog, AgisMobClient.MSG_TYPE_EDIT_MOB)
MessageCatalog.addMsgTypeTranslation(worldMessageCatalog, AgisMobClient.MSG_TYPE_CREATE_FACTION)
MessageCatalog.addMsgTypeTranslation(worldMessageCatalog, AgisMobClient.MSG_TYPE_EDIT_FACTION)
MessageCatalog.addMsgTypeTranslation(worldMessageCatalog, AgisMobClient.MSG_TYPE_CATEGORY_UPDATED)
MessageCatalog.addMsgTypeTranslation(worldMessageCatalog, AgisMobClient.MSG_TYPE_SPAWN_DOME_MOB)
MessageCatalog.addMsgTypeTranslation(worldMessageCatalog, AgisMobClient.MSG_TYPE_DOME_ENQUIRY)
MessageCatalog.addMsgTypeTranslation(worldMessageCatalog, AgisMobClient.MSG_TYPE_DOME_ENTRY_REQUEST)
MessageCatalog.addMsgTypeTranslation(worldMessageCatalog, AgisMobClient.MSG_TYPE_DOME_LEAVE_REQUEST)
MessageCatalog.addMsgTypeTranslation(worldMessageCatalog, AgisMobClient.MSG_TYPE_ACTIVATE_DOME_ABILITY)
MessageCatalog.addMsgTypeTranslation(worldMessageCatalog, AgisMobClient.MSG_TYPE_MOB_KILLED)
MessageCatalog.addMsgTypeTranslation(worldMessageCatalog, AgisMobClient.MSG_TYPE_OBJECT_ACTIVATED)
MessageCatalog.addMsgTypeTranslation(worldMessageCatalog, AgisMobClient.MSG_TYPE_GET_INTERACTION_OPTIONS)
MessageCatalog.addMsgTypeTranslation(worldMessageCatalog, AgisMobClient.MSG_TYPE_START_INTERACTION)
MessageCatalog.addMsgTypeTranslation(worldMessageCatalog, AgisMobClient.MSG_TYPE_DIALOGUE_OPTION_CHOSEN)
MessageCatalog.addMsgTypeTranslation(worldMessageCatalog, AgisMobClient.MSG_TYPE_START_DIALOGUE)
MessageCatalog.addMsgTypeTranslation(worldMessageCatalog, AgisMobClient.MSG_TYPE_INVALID_PATH)
MessageCatalog.addMsgTypeTranslation(worldMessageCatalog, AgisMobClient.MSG_TYPE_PLAY_COORD_EFFECT)
MessageCatalog.addMsgTypeTranslation(worldMessageCatalog, AgisMobClient.MSG_TYPE_DELETE_SPAWN_GENERATOR)
MessageCatalog.addMsgTypeTranslation(worldMessageCatalog, AgisMobClient.MSG_TYPE_CREATE_SHOP_SPAWN)
MessageCatalog.addMsgTypeTranslation(worldMessageCatalog, AgisMobClient.MSG_TYPE_DELETE_SHOP_SPAWN)
MessageCatalog.addMsgTypeTranslation(worldMessageCatalog, AgisMobClient.MSG_TYPE_DESPAWN_PLAYER_SHOP)
MessageCatalog.addMsgTypeTranslation(worldMessageCatalog, AgisMobClient.MSG_TYPE_MOB_GET_ACTOR_SPEED)
MessageCatalog.addMsgTypeTranslation(worldMessageCatalog, AgisMobClient.MSG_TYPE_DEBUG_MOB)

# Faction Client
MessageCatalog.addMsgTypeTranslation(worldMessageCatalog, FactionClient.MSG_TYPE_GET_REACTION)
MessageCatalog.addMsgTypeTranslation(worldMessageCatalog, FactionClient.MSG_TYPE_GET_STANCE)
MessageCatalog.addMsgTypeTranslation(worldMessageCatalog, FactionClient.MSG_TYPE_GET_STANCE_TARGETS)
MessageCatalog.addMsgTypeTranslation(aoMessageCatalog, FactionClient.MSG_TYPE_UPDATE_PVP_STATE)
MessageCatalog.addMsgTypeTranslation(aoMessageCatalog, FactionClient.MSG_TYPE_ALTER_REPUTATION)

# Social Client
#MessageCatalog.addMsgTypeTranslation(worldMessageCatalog, SocialClient.MSG_TYPE_CHANNEL_CHANGE)
MessageCatalog.addMsgTypeTranslation(aoMessageCatalog, AgisWorldManagerClient.MSG_TYPE_GLOBAL_CHAT)
MessageCatalog.addMsgTypeTranslation(aoMessageCatalog, GroupClient.MSG_TYPE_IS_ON_BLOCK_LIST)
#MessageCatalog.addMsgTypeTranslation(aoMessageCatalog, SocialClient.MSG_TYPE_BLOCK_LIST)
#MessageCatalog.addMsgTypeTranslation(aoMessageCatalog, SocialClient.MSG_TYPE_DEL_FRIEND)
#MessageCatalog.addMsgTypeTranslation(aoMessageCatalog, SocialClient.MSG_TYPE_GET_FRIENDS)
MessageCatalog.addMsgTypeTranslation(aoMessageCatalog, SocialClient.MSG_TYPE_SOCIAL_PRIVATE_INVITE)
MessageCatalog.addMsgTypeTranslation(aoMessageCatalog, SocialClient.MSG_TYPE_SOCIAL_PRIVATE_INVITE_RESPONSE)

MessageCatalog.addMsgTypeTranslation(aoMessageCatalog, GroupClient.MSG_TYPE_SOCIAL_ADD_FRIEND)
MessageCatalog.addMsgTypeTranslation(aoMessageCatalog, GroupClient.MSG_TYPE_SOCIAL_DEL_FRIEND)
MessageCatalog.addMsgTypeTranslation(aoMessageCatalog, GroupClient.MSG_TYPE_SOCIAL_GET_FRIENDS)
MessageCatalog.addMsgTypeTranslation(aoMessageCatalog, GroupClient.MSG_TYPE_ADD_BLOCK)
MessageCatalog.addMsgTypeTranslation(aoMessageCatalog, GroupClient.MSG_TYPE_DEL_BLOCK)
MessageCatalog.addMsgTypeTranslation(aoMessageCatalog, GroupClient.MSG_SOCIAL_INVITE_RESPONSE)

# Data Logger
#MessageCatalog.addMsgTypeTranslation(aoMessageCatalog, DataLoggerClient.MSG_TYPE_DATA_LOG)
MessageCatalog.addMsgTypeTranslation(aoMessageCatalog, DataLoggerClient.MSG_TYPE_CHARACTER_CREATED)
MessageCatalog.addMsgTypeTranslation(aoMessageCatalog, DataLoggerClient.MSG_TYPE_CHARACTER_DELETED)
#MessageCatalog.addMsgTypeTranslation(aoMessageCatalog, DataLoggerClient.MSG_TYPE_EVENT_LOG)

# Crafting Client
MessageCatalog.addMsgTypeTranslation(aoMessageCatalog, CraftingClient.MSG_TYPE_HARVEST_RESOURCE)
MessageCatalog.addMsgTypeTranslation(aoMessageCatalog, CraftingClient.MSG_TYPE_GATHER_RESOURCE)
MessageCatalog.addMsgTypeTranslation(aoMessageCatalog, CraftingClient.MSG_TYPE_CRAFTING_CRAFT_ITEM)
MessageCatalog.addMsgTypeTranslation(aoMessageCatalog, CraftingClient.MSG_TYPE_CRAFTING_GRID_UPDATED)
MessageCatalog.addMsgTypeTranslation(aoMessageCatalog, CraftingClient.MSG_TYPE_GET_BLUEPRINTS)
MessageCatalog.addMsgTypeTranslation(aoMessageCatalog, CraftingClient.MSG_TYPE_CREATE_RESOURCE_NODE_FROM_MOB)
MessageCatalog.addMsgTypeTranslation(aoMessageCatalog, CraftingClient.MSG_TYPE_DESTROY_MOB_RESOURCE_NODE)

# Voxel Client
MessageCatalog.addMsgTypeTranslation(aoMessageCatalog, VoxelClient.MSG_TYPE_CREATE_CLAIM)
MessageCatalog.addMsgTypeTranslation(aoMessageCatalog, VoxelClient.MSG_TYPE_EDIT_CLAIM)
MessageCatalog.addMsgTypeTranslation(aoMessageCatalog, VoxelClient.MSG_TYPE_PURCHASE_CLAIM)
MessageCatalog.addMsgTypeTranslation(aoMessageCatalog, VoxelClient.MSG_TYPE_SELL_CLAIM)
MessageCatalog.addMsgTypeTranslation(aoMessageCatalog, VoxelClient.MSG_TYPE_DELETE_CLAIM)
MessageCatalog.addMsgTypeTranslation(aoMessageCatalog, VoxelClient.MSG_TYPE_CLAIM_PERMISSION)
MessageCatalog.addMsgTypeTranslation(aoMessageCatalog, VoxelClient.MSG_TYPE_CLAIM_ACTION)
MessageCatalog.addMsgTypeTranslation(aoMessageCatalog, VoxelClient.MSG_TYPE_PLACE_CLAIM_OBJECT)
MessageCatalog.addMsgTypeTranslation(aoMessageCatalog, VoxelClient.MSG_TYPE_EDIT_CLAIM_OBJECT)
MessageCatalog.addMsgTypeTranslation(aoMessageCatalog, VoxelClient.MSG_TYPE_GET_RESOURCES)
MessageCatalog.addMsgTypeTranslation(aoMessageCatalog, VoxelClient.MSG_TYPE_NO_BUILD_CLAIM_TRIGGER)
MessageCatalog.addMsgTypeTranslation(aoMessageCatalog, VoxelClient.MSG_TYPE_UPGRADE_BUILDING_OBJECT)
MessageCatalog.addMsgTypeTranslation(aoMessageCatalog, VoxelClient.MSG_TYPE_GET_BUILDING_TEMPLATE)
MessageCatalog.addMsgTypeTranslation(aoMessageCatalog, VoxelClient.MSG_TYPE_GET_CLAIM_OBJECT_INFO)
MessageCatalog.addMsgTypeTranslation(aoMessageCatalog, VoxelClient.MSG_TYPE_ATTACK_BUILDING_OBJECT)
MessageCatalog.addMsgTypeTranslation(aoMessageCatalog, VoxelClient.MSG_TYPE_TAKE_CLAIM_RESOURCE)
MessageCatalog.addMsgTypeTranslation(aoMessageCatalog, VoxelClient.MSG_TYPE_GET_CHEST_STORAGE_OID)
MessageCatalog.addMsgTypeTranslation(aoMessageCatalog, VoxelClient.MSG_TYPE_SEND_UPDATE_CLAIM)
MessageCatalog.addMsgTypeTranslation(aoMessageCatalog, VoxelClient.MSG_TYPE_ADD_DYNAMIC_NM_OBJECT)
MessageCatalog.addMsgTypeTranslation(aoMessageCatalog, VoxelClient.MSG_TYPE_GET_BUILDING_LOC)
MessageCatalog.addMsgTypeTranslation(aoMessageCatalog, VoxelClient.MSG_TYPE_BUILDING_DAMAGE)
MessageCatalog.addMsgTypeTranslation(aoMessageCatalog, VoxelClient.MSG_TYPE_ADD_DYNAMIC_NM_OBJECT)
MessageCatalog.addMsgTypeTranslation(aoMessageCatalog, VoxelClient.MSG_TYPE_GET_BUILDING_IN_AREA)
MessageCatalog.addMsgTypeTranslation(aoMessageCatalog, VoxelClient.MSG_TYPE_UPGRADE_CLAIM)
MessageCatalog.addMsgTypeTranslation(aoMessageCatalog, VoxelClient.MSG_TYPE_PAY_TAX_CLAIM)
MessageCatalog.addMsgTypeTranslation(aoMessageCatalog, VoxelClient.MSG_TYPE_GET_BUILDING_IS_ATTACKABLE)

# Agis Proxy Client
#MessageCatalog.addMsgTypeTranslation(aoMessageCatalog, AgisProxyClient.MSG_TYPE_GET_ALL_PLAYER_OIDS)

# Agis World Manager Client
MessageCatalog.addMsgTypeTranslation(worldMessageCatalog, AgisWorldManagerClient.MSG_TYPE_CHANGE_INSTANCE)
MessageCatalog.addMsgTypeTranslation(worldMessageCatalog, AgisWorldManagerClient.MSG_TYPE_LEAVE_INSTANCE)
MessageCatalog.addMsgTypeTranslation(aoMessageCatalog, AgisWorldManagerClient.MSG_TYPE_SET_MOVEMENT_STATE)
MessageCatalog.addMsgTypeTranslation(aoMessageCatalog, AgisWorldManagerClient.MSG_TYPE_WATER_REGION_TRANSITION)
#MessageCatalog.addMsgTypeTranslation(aoMessageCatalog, AgisWorldManagerClient.MSG_TYPE_CHANGE_INSTANCE)
MessageCatalog.addMsgTypeTranslation(aoMessageCatalog, AgisWorldManagerClient.MSG_TYPE_RETURN_TO_LAST_INSTANCE)
MessageCatalog.addMsgTypeTranslation(aoMessageCatalog, AgisWorldManagerClient.MSG_TYPE_SERVER_TIME)
MessageCatalog.addMsgTypeTranslation(aoMessageCatalog, AgisWorldManagerClient.MSG_TYPE_LOGOUT_REQUEST)
MessageCatalog.addMsgTypeTranslation(aoMessageCatalog, AgisWorldManagerClient.MSG_TYPE_CANCEL_LOGOUT_REQUEST)
MessageCatalog.addMsgTypeTranslation(aoMessageCatalog, AgisWorldManagerClient.MSG_TYPE_CHECK_IF_TARGETS_IN_AREA)
MessageCatalog.addMsgTypeTranslation(aoMessageCatalog, AgisWorldManagerClient.MSG_TYPE_SET_UNDERWATER)
MessageCatalog.addMsgTypeTranslation(aoMessageCatalog, AgisWorldManagerClient.MSG_TYPE_SPAWN_TRAP)
MessageCatalog.addMsgTypeTranslation(aoMessageCatalog, AgisWorldManagerClient.MSG_TYPE_REVIVE)
MessageCatalog.addMsgTypeTranslation(aoMessageCatalog, AgisWorldManagerClient.MSG_TYPE_MOB_FIND_NEAREST_POINT)
MessageCatalog.addMsgTypeTranslation(aoMessageCatalog, AgisWorldManagerClient.MSG_TYPE_MOB_GET_PATH)

# Guild Plugin
MessageCatalog.addMsgTypeTranslation(aoMessageCatalog, GuildClient.MSG_TYPE_CREATE_GUILD)
MessageCatalog.addMsgTypeTranslation(aoMessageCatalog, GuildClient.MSG_TYPE_INVITE_RESPONSE)
MessageCatalog.addMsgTypeTranslation(aoMessageCatalog, GuildClient.MSG_TYPE_GUILD_COMMAND)
MessageCatalog.addMsgTypeTranslation(aoMessageCatalog, GuildClient.MSG_TYPE_GET_PLAYER_IS_ONLINE)
MessageCatalog.addMsgTypeTranslation(worldMessageCatalog, GuildClient.MSG_TYPE_GUILD_CLAIM_PERMISSION)
MessageCatalog.addMsgTypeTranslation(worldMessageCatalog, GuildClient.MSG_TYPE_GET_GUILD_WAREHOUSE)
MessageCatalog.addMsgTypeTranslation(worldMessageCatalog, GuildClient.MSG_TYPE_GUILD_WAREHOUSE_PERMISSION)
MessageCatalog.addMsgTypeTranslation(worldMessageCatalog, GuildClient.MSG_TYPE_GET_GUILD_MERCHANT)
MessageCatalog.addMsgTypeTranslation(aoMessageCatalog, GuildClient.MSG_TYPE_GUILD_ADD_RESOURCES)

# Weather Plugin
MessageCatalog.addMsgTypeTranslation(aoMessageCatalog, WeatherClient.MSG_TYPE_SET_WORLD_TIME)
MessageCatalog.addMsgTypeTranslation(aoMessageCatalog, WeatherClient.MSG_TYPE_SET_WEATHER_PROFILE)
MessageCatalog.addMsgTypeTranslation(aoMessageCatalog, WeatherClient.MSG_TYPE_GET_WEATHER_PROFILE)
MessageCatalog.addMsgTypeTranslation(aoMessageCatalog, WorldManagerClient.MSG_TYPE_GET_WEATHER)
#NavMesh
MessageCatalog.addMsgTypeTranslation(aoMessageCatalog, WorldManagerClient.MSG_TYPE_CHECK_VISIBILITY)
# Auction Plugin
MessageCatalog.addMsgTypeTranslation(aoMessageCatalog, AuctionClient.MSG_TYPE_AUCTION_SELL)
MessageCatalog.addMsgTypeTranslation(aoMessageCatalog, AuctionClient.MSG_TYPE_AUCTION_BUY)
MessageCatalog.addMsgTypeTranslation(aoMessageCatalog, AuctionClient.MSG_TYPE_AUCTION_LIST)
MessageCatalog.addMsgTypeTranslation(aoMessageCatalog, AuctionClient.MSG_TYPE_AUCTION_OWNER_LIST)
MessageCatalog.addMsgTypeTranslation(aoMessageCatalog, AuctionClient.MSG_TYPE_AUCTION_SEARCH)
MessageCatalog.addMsgTypeTranslation(aoMessageCatalog, AuctionClient.MSG_TYPE_AUCTION_GET_FOR_GROUP)
MessageCatalog.addMsgTypeTranslation(aoMessageCatalog, AuctionClient.MSG_TYPE_AUCTION_TAKE_ALL)
MessageCatalog.addMsgTypeTranslation(aoMessageCatalog, AuctionClient.MSG_TYPE_AUCTION_GET_AUCTIONS_LIST)
MessageCatalog.addMsgTypeTranslation(aoMessageCatalog, AuctionClient.MSG_TYPE_AUCTION_ORDER)
MessageCatalog.addMsgTypeTranslation(aoMessageCatalog, AuctionClient.MSG_TYPE_AUCTION_CANCELL)

